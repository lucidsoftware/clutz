plugins {
  id 'java'
  id 'eclipse'

  // Generate coverage during tests.
  id 'jacoco'

  // Generate executable scripts
  id 'application'

  // enforces consistent formatting
  id 'com.github.sherter.google-java-format' version '0.6'

  // enforces java style
  id 'net.ltgt.errorprone' version '0.0.10'
}

def createScript(project, mainClass, name) {
  project.tasks.create(name: name, type: CreateStartScripts) {
    outputDir       = new File(project.buildDir, 'scripts')
    mainClassName   = mainClass
    applicationName = name
    classpath       = project.tasks[JavaPlugin.JAR_TASK_NAME].outputs.files + project.configurations.runtime
  }
  project.tasks[name].dependsOn(project.jar)

  project.applicationDistribution.with {
    into("bin") {
      from(project.tasks[name])
      fileMode = 0755
    }
  }
}

startScripts.enabled = false
run.enabled = false

sourceCompatibility = 1.8
version = '1.0'

createScript(project, 'com.google.javascript.clutz.DeclarationGenerator', 'clutz')
createScript(project, 'com.google.javascript.gents.TypeScriptGenerator', 'gents')

repositories {
  mavenCentral()
}

dependencies {

  // Verify all versions match closure-compiler's deps to avoid version conflicts.
  // https://github.com/google/closure-compiler/blob/master/pom-main.xml
  runtime 'args4j:args4j:2.0.26'
  runtime 'com.google.code.gson:gson:2.7'

  compile 'com.google.javascript:closure-compiler:v20170124'


  compile 'com.google.code.findbugs:jsr305:3.0.1'
  compile 'com.google.guava:guava:20.0'

  testCompile 'junit:junit:4.11'
  testCompile 'com.google.truth:truth:0.30'
}

tasks.withType(Test) {
  systemProperty 'gents.clangFormat',
                 System.getProperty('gents.clangFormat', 'node_modules/.bin/clang-format')
}

test {
  testLogging {
    exceptionFormat = 'full'
  }
}

googleJavaFormat {
  toolVersion '1.3'
}
